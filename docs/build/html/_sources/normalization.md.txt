# `normalization````{eval-rst}.. function:: normalization.smooth    :param kind: norm_flux    :type kind: any        :param kind: box_size    :type kind: any        :returns: y_smooth    :rtype: any        ``````{eval-rst}.. function:: normalization.define_three_anchor_points    :param kind: z    :type kind: float        :param kind: spectra_data    :type kind: list[int]        :returns: left_point    :rtype: tuple        :returns: middle_point    :rtype: tuple        :returns: right_point    :rtype: tuple        ``````{eval-rst}.. function:: normalization.dynamic_find_anchor_points    :param kind: spectra_data    :type kind: tuple        :param kind: number_of_anchor_points    :type kind: array[int]        :param kind: z    :type kind: float        :param kind: user_anchors    :type kind: list[int]        :param kind: user_delta    :type kind: float        :returns: anchor_pts    :rtype: array[objects]        ```